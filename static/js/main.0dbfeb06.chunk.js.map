{"version":3,"sources":["img/logo.svg","actions/index.js","reducers/reposReducer.js","reducers/index.js","components/Spinner.js","components/ReposList.js","components/ReposInfo.js","components/App.js","index.js"],"names":["module","exports","FETCH_REPOS_BEGIN","FETCH_REPOS_SUCCESS","FETCH_REPOS_FAILURE","fetchReposBegin","type","fetchReposSuccess","repos","payload","fetchReposFailure","error","fetchRepos","url","dispatch","fetch","then","handleErrors","res","json","getRepos","catch","response","ok","Error","statusText","initialState","items","loading","combineReducers","reposReducer","state","action","Spinner","className","src","logo","alt","ReposList","this","props","Table","striped","bordered","hover","size","map","repo","i","key","to","name","React","Component","ReposInfo","nStargazers","nSubscribers","nForks","goBack","history","full_name","data","setState","stargazers_count","subscribers_count","forks","description","html_url","href","target","rel","onClick","withRouter","App","limitedRepos","slice","message","limitedRoutes","path","connect","store","createStore","rootReducer","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0dbfeb06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const FETCH_REPOS_BEGIN = \"FETCH_REPOS_BEGIN\";\nexport const FETCH_REPOS_SUCCESS = \"FETCH_REPOS_SUCCESS\";\nexport const FETCH_REPOS_FAILURE = \"FETCH_REPOS_FAILURE\";\n\nexport const fetchReposBegin = () => ({\n  type: FETCH_REPOS_BEGIN\n});\n\nexport const fetchReposSuccess = repos => {\n\treturn {\n\t\ttype: FETCH_REPOS_SUCCESS,\n\t\tpayload: { repos }\n\t}\n};\n\nexport const fetchReposFailure = error => ({\n  type: FETCH_REPOS_FAILURE,\n  payload: { error }\n});\n\n\nfunction getRepos(url) {\n  return fetch(url)\n\t\t.then(handleErrors)\n\t\t.then(res => res.json())\n}\n\nexport function fetchRepos(url) {\n  return dispatch => {\n    dispatch(fetchReposBegin());\n\t\treturn getRepos(url)\n      .then(repos => {\n        dispatch(fetchReposSuccess(repos));\n        return repos;\n      })\n      .catch(error => dispatch(fetchReposFailure(error)));\n  };\n}\n\n// Handle HTTP errors\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\n\n\n\n\n","import {\n  FETCH_REPOS_BEGIN,\n  FETCH_REPOS_SUCCESS,\n  FETCH_REPOS_FAILURE\n} from \"../actions/index\";\n\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null\n};\n\nexport default function reposReducer(\n  state = initialState,\n  action\n) {\n  switch (action.type) {\n    case FETCH_REPOS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n\n    case FETCH_REPOS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        items: action.payload.repos\n      };\n\n    case FETCH_REPOS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        items: []\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport reposReducer from \"./reposReducer\";\n\nexport default combineReducers({\n  reposReducer\n});\n","import React from \"react\";\nimport logo from '../img/logo.svg';\n\nexport default function Spinner() {\n  return (\n    <span className=\"spinner\">\n      <img src={logo} alt=\"\" className=\"spinner-img\"/>\n    </span>\n  )\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from 'react-bootstrap/Table';\n\nclass ReposList extends React.Component {\n  render() {\n    const { repos } = this.props;\n    return (\n\t\t\t<Table striped bordered hover size=\"sm\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>#</th>\n\t\t\t\t\t\t<th>Repo name</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{repos.map((repo, i) => (\n\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t<td>{++i}</td>\n\t\t\t\t\t\t\t<td><Link to={`/${repo.name}`} >{repo.name}</Link></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n    );\n  }\n}\n\nexport default ReposList;\n","import React from \"react\";\nimport Spinner from './Spinner';\nimport Table from 'react-bootstrap/Table';\n\nimport { withRouter } from 'react-router-dom';\n\nconst REPO_DETAILS_URL = \"https://api.github.com/repos/\"\n\nclass ReposInfo extends React.Component {\n  state = {\n    loading: true,\n    nStargazers: 0,\n    nSubscribers: 0,\n    nForks: 0\n  }\n\n  componentDidMount() {\n    const {full_name} = this.props.data;\n    fetch(`${REPO_DETAILS_URL}${full_name}`)\n      .then(res => res.json())\n      .then(res => this.setState({ loading: false, nStargazers: res.stargazers_count, nSubscribers: res.subscribers_count, nForks: res.forks }))\n  }\n\n  goBack = () => {\n    const { history } = this.props;\n    if(history) history.goBack();\n  }\n\n  render (){\n    const { name, description, html_url } = this.props.data;\n    const { loading, nStargazers, nSubscribers, nForks } = this.state;\n    \n    return loading ? <Spinner /> : (\n      <>\n        <Table striped bordered hover size=\"sm\">\n          <tbody>\n            <tr>\n              <td><p>Name</p></td>\n              <td><a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\">{name}</a></td>\n            </tr>\n            <tr>\n              <td><p>Description</p></td>\n              <td><p>{description}</p></td>\n            </tr>\n            <tr>\n              <td><p>Number of stargazers</p></td>\n              <td><p>{nStargazers}</p></td>\n            </tr>\n            <tr>\n              <td><p>Number of watchers</p></td>\n              <td><p>{nSubscribers}</p></td>\n            </tr>\n            <tr>\n              <td><p>Forks</p></td>\n              <td><p>{nForks}</p></td>\n            </tr>\n          </tbody>\n        </Table>\n        <button onClick={this.goBack}>Back</button>\n      </>)\n  }\n}\n\nexport default withRouter(ReposInfo);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport { Route} from \"react-router-dom\";\nimport { fetchRepos } from \"../actions/index\";\n\nimport Spinner from \"./Spinner\";\nimport ReposList from \"./ReposList\";\nimport ReposInfo from \"./ReposInfo\";\n\nconst ELEMENTS_LIMIT = 20;\nconst FETCH_URL = \"https://api.github.com/repositories\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchRepos(FETCH_URL));\n  }\n    \n  render() {\n    const { error, loading, repos } = this.props;\n\t\tlet limitedRepos = repos.slice(0, ELEMENTS_LIMIT) || [];\n\n    if (error) {\n      return <div>Error! {error.message}</div>;\n    }\n\n    if (loading) {\n      return <Spinner />;\n    }\n\n\t\tconst limitedRoutes = limitedRepos.map((repo, i) => (\n      <Route key={i} path={`/${repo.name}`}>\n        <ReposInfo data={repo} />\n      </Route>\n    ))\n\n    return (\n      <Switch>\n        {limitedRoutes}\n        <Route path='/'>\n          <ReposList repos={limitedRepos} />\n        </Route>\n      </Switch>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    repos: state.reposReducer.items,\n    loading: state.reposReducer.loading,\n    error: state.reposReducer.error\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nimport App from './components/App'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/index.css\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<App/>\n\t\t</Router>\n\t</Provider>,\n  rootElement\n);\n"],"sourceRoot":""}